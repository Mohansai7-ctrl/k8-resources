apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: nginx
  labels:   #these labels for now creating replica set, meaning belongs to replica set
    app: nginx
    tier: frontend
spec:
  replicas: 3
  selector:
    matchLabels:  #by using these labels to select the pods to create replicas, The ReplicaSet/Deployment uses labels (app: nginx, tier: frontend) to select and manage its Pods. so that pods will be created having these lables so that ReplicaSet/Deployment can identifies the pods with these labels to manage them.
      app: nginx 
      tier: frontend
  template:
    metadata:
      name: nginx
      labels:   # these labels belongs to pod, shoulde match with selector matchLabels.
        app: nginx
        tier: frontend
    spec:
      containers:
      - name: nginx
        #image: nginx  #replicaset cannot update the image, once the pods were created initially with provided image, if version is changed then it cant update the pods again
        image: nginx:stable-perl

#Above will create 3 pods ----> node-<random_hash>, if one pod is deleted, then replicaset make sure to create other pod so that it can match with replicas configured in this yaml file
# kubectl delete pd <pod_name>

# now for these 3 pods, need to create service(default-ClusterIP) so that it can act as load balancer

---

apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
  
spec:
  selector:
    app: nginx
    tier: frontend
  ports:
  - name: nginx-svc-port
    protocol: TCP
    port: 80
    targetPort: 80


    
